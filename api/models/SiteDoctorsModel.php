<?phpnamespace api\models;use Yii;use yii\base\Model;class SiteDoctorsModel extends Model{    public $db;    public $datetime;    public static $viewTableName = 'view_clinic_doctors';    public static $viewSpecialistTableName = 'view_doctor_specialist';    public static $tableName = 'site_doctors';    public function __construct(array $config = [])    {        parent::__construct($config);        $this->datetime = Yii::$app->params['current.date'] . ' ' . Yii::$app->params['current.time'];        $this->db = Yii::$app->db;    }    public static function getHospitalDoctors($hospital_id, $page = 0)    {        $db = Yii::$app->db;        $limit = Yii::$app->params["site.hospital_doctor_count"];        $offset = $page * $limit;        $result = $db->createCommand("SELECT * FROM `site_enterprise_employers` WHERE `connect_id`=:hospital_id LIMIT $offset,$limit", [":hospital_id" => $hospital_id])->queryAll();        return $result;    }    public static function getCountHospitalDoctors($hospital_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(connect_id) FROM `site_enterprise_employers` WHERE `connect_id`=:hospital_id", [":hospital_id" => $hospital_id])->queryScalar();        return $result;    }    public static function getSpecialistName($doctor_id)    {        $db = Yii::$app->db;        $specialistName = '';        $result = $db->createCommand("SELECT `name`,`icon`,`slug` FROM `" . self::$viewSpecialistTableName . "` WHERE `doctor_id`=:doctor_id", [":doctor_id" => $doctor_id])->queryAll();        if ($result) {            $i = 1;            foreach ($result as $row) {                if ($i > 1) {                    $specialistName .= ',';                }                $specialistName .= $row["name"];            }        }        return $specialistName;    }    public static function getCountDoctors($specialist_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1", [":specialist_id" => $specialist_id,])->queryScalar();        return $result;    }    public static function getDoctors($specialist_id, $offset, $limit)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1 ORDER BY `id` DESC LIMIT :offset,:limit", [":specialist_id" => $specialist_id, ":offset" => $offset, ":limit" => $limit])->queryAll();        return $result;    }    public static function getSpecialistList($ids)    {        $result = null;        $db = Yii::$app->db;        $data = $db->createCommand("SELECT * FROM `view_doctor_specialist` WHERE `doctor_id` IN({$ids}) ORDER BY `name`")->queryAll();        if (!empty($data)) {            foreach ($data as $key => $val) {                $result[$val['doctor_id']][] = $val;            }        }        return $result;    }    public static function getDoctorInfo($id, $select = null)    {        $db = Yii::$app->db;        if (empty($select)) {            $result = $db->createCommand("SELECT * FROM `site_doctors` WHERE `id`=:id", [":id" => $id])->queryOne();        } else {            $result = $db->createCommand("SELECT {$select} FROM `site_doctors` WHERE `id`=:id", [":id" => $id])->queryOne();        }        return $result;    }    public static function getDoctorInfoByEnterprise($enterpriseID, $doctorID)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT d.* FROM `site_doctors` AS d INNER JOIN `site_enterprise_doctor` AS e ON d.`id`=e.`doctor_id` WHERE d.`id`=:id AND e.`enterprise_id`=:enterprise_id", [":id" => $doctorID, ':enterprise_id' => $enterpriseID])->queryOne();        return $result;    }    public static function getDoctorSpecialist($id)    {        $db = Yii::$app->db;        $data = $db->createCommand("SELECT * FROM `view_doctor_specialist` WHERE `doctor_id`=:doctor_id ORDER BY `id`", [":doctor_id" => $id])->queryAll();        return $data;    }    public static function getWorkplaces($id)    {        $db = Yii::$app->db;        $data = $db->createCommand("SELECT * FROM `site_doctor_workplaces_list` WHERE `doctor_id`=:doctor_id ORDER BY `id`", [":doctor_id" => $id])->queryAll();        return $data;    }    public static function getDoctorWithUser($user_id)    {        $db = Yii::$app->db;        $data = $db->createCommand("SELECT * FROM `site_doctors` WHERE `user_id`=:user_id ORDER BY `id`", [":user_id" => $user_id])->queryOne();        return $data;    }    public static function getEntWithUser($user_id)    {        $db = Yii::$app->db;        $data = $db->createCommand("SELECT * FROM `site_enterprises` WHERE `user_id`=:user_id ORDER BY `id`", [":user_id" => $user_id])->queryOne();        return $data;    }    public function get_next_post($post_id)    {        $data = $this->db->createCommand("SELECT * FROM `site_doctors`                              WHERE `id`>:id  LIMIT 1", [':id' => $post_id])->queryOne();        if (!empty($data))            return $data;        else            return false;    }    public function get_prev_post($post_id)    {        $data = $this->db->createCommand("SELECT * FROM `site_doctors`                          WHERE `id`<:id LIMIT 1", [':id' => $post_id])->queryOne();        if (!empty($data))            return $data;        else            return false;    }}