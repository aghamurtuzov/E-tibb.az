<?phpnamespace api\models;use Yii;/** * This is the model class for table "site_enterprises". * * @property int $id * @property int $category_id * @property string $name * @property string $photo * @property string $expires * @property int $promotion * @property int $feature 1 - Catdirilma | 2 - 24 saat | 3 - Caqiris * @property double $rating * @property string $about * @property string $services_prices */class SiteEnterprises extends \yii\db\ActiveRecord{    public $sosial_links;    public $phone_numbers;    public $addresses;    public $added_sosial_links;    public $added_phone_numbers;    public $added_addresses;    public $files;    public $mainImage;    public $deletedImages;    public $catdirilma;    public $saat24;    public $eve_caqiris;    public $deletedCertificates;    public $email;    public $contact_name;    public $contact_phone;    public $contact_birthday;    public $company_email;    /**     * {@inheritdoc}     */    public static function tableName()    {        return 'site_enterprises';    }    public function getClassName()    {        $exp = explode('\\',__CLASS__);        return $exp[count($exp)-1];    }    public static function getWorkers($company_id)    {        $connection = Yii::$app->getDb();        $result     = $connection->createCommand("SELECT * FROM `site_enterprise_employers` where `connect_id`='$company_id' order by id DESC")->queryAll();        if(!empty($result))            return $result;        else            return False;    }    public static function get_Study()    {        return [            0 => 'Natamam ali',            1 => 'Ali',            2 => 'Tibb üzrə fəlsəfə doktoru',            3 => 'Elmlər doktoru'        ];    }    /**     * {@inheritdoc}     */    public function rules()    {        $return = [            [['category_id','contact_name', 'name','contact_phone','about'], 'required','message'=>'{attribute} xanasını boş buraxmayın'],            [['email'],'email'],            [['weekdays','saturday','sunday'],'match', 'pattern' => '/^((?:2[0-3]|[01][0-9]):[0-5][0-9])-((?:2[0-3]|[01][0-9]):[0-5][0-9])$/'],            //[['weekdays'],'match', 'pattern' => '/^(?:2[0-4]|[01][1-9]|10):([0-5][0-9])-(?:2[0-4]|[01][1-9]|10):([0-5][0-9])$/'],            [['category_id', 'promotion', 'catdirilma','saat24','eve_caqiris','balance'], 'integer'],            [['expires'], 'safe'],            [['rating'], 'number'],            ['contact_phone', 'CheckPhoneNumber'],            [['sosial_links','phone_numbers','addresses','company_email','deletedCertificates'],'checkIsArray'],            ['sosial_links', 'CheckSocialLink'],            [['about', 'services_prices','added_sosial_links','added_phone_numbers','added_addresses','contact_birthday'], 'string'],            ['contact_birthday', 'date', 'format' => 'php:Y-m-d'],            [['name'], 'string', 'max' => 200],            [['weekdays','saturday','sunday'],'string'],            [['photo','mainImage','deletedImages'],'string'],            [['files'], 'file','skipOnEmpty' => true, 'extensions'=>'png,jpg','maxFiles' => 20,'wrongExtension'=>'Yalnız {extensions}']        ];        if($this->isNewRecord)        {            array_push($return,['email', 'required']);            array_push($return,['email', 'unique', 'targetClass' => '\api\models\SiteUsers', 'message' => 'Bu email ilə istifadəçi artıq qeydiyyatdan keçmişdir.']);        }        return $return;    }    public function CheckSocialLink($attribute)    {        $expressions = [            '/(?:https?:\/\/)?(?:www\.)?facebook\.com\/.(?:(?:\w)*#!\/)?(?:pages\/)?(?:[\w\-]*\/)*([\w\-\.]*)/',            '/(?:https?:)?\/\/(?:www\.)?(?:instagram\.com|instagr\.am)\/(?P<username>[A-Za-z0-9_](?:(?:[A-Za-z0-9_]|(?:\.(?!\.))){0,28}(?:[A-Za-z0-9_]))?)/',            '/(?:https?:)?\/\/(?:[A-z]+\.)?youtube.com\/channel\/(?P<id>[A-z0-9-\_]+)\/?/',            '/(?:https?:)?\/\/(?:[A-z]+\.)?twitter\.com\/@?(?P<username>[A-z0-9_]+)\/?/',            '/(?:https?:)?\/\/(?:[\w]+\.)?linkedin\.com\/in\/(?P<permalink>[\w\-\_À-ÿ%]+)\/?/'        ];        $field = $this->$attribute;        $errors = [];        for($i = 0; $i < count($field); $i++) {            $type = $field[$i]['type'];            $link = trim($field[$i]['link']);            if(!empty($link) && !preg_match($expressions[$type], $link)) {                $errors[$type] = "Link düzgün deyil";            }        }        if($errors) {            $this->addError($attribute,$errors);        }    }    public function checkIsArray($attribute)    {        if(!is_array($this->$attribute)){            $this->addError($attribute,'Xəta! Massiv deyil!');        }    }    /**     * {@inheritdoc}     */    public function attributeLabels()    {        return [            'id' => 'ID',            'category_id' => 'Kateqoriya',            'name' => 'Ad',            'photo' => 'Şəkil ( png , jpg )',            'expires' => 'Etibarlıdır',            'promotion' => 'Promotion',            'feature' => 'Özəlliklər',            'rating' => 'Reytinq',            'balane' => 'Balans',            'about' => 'Haqqında',            'services_prices' => 'Qiymətlər',            'catdirilma' => 'Evə çatdılıma',            'saat24' => '24 Saat açıq',            'eve_caqiris' => 'Evə çağırış',            'addresses' => 'Ünvanlar',            'sosial_links' => 'Sosial linklər',            'phone_numbers' => 'Telefon nömrələri',            'weekdays'=>'Həftə içi',            'saturday'=>'Şənbə',            'sunday'=>'Bazar',            'email'=>'Əlaqələndirici şəxsin e-poçt ünvanı',            'contact_name'=>'Əlaqələndirici şəxsin adı',            'contact_phone'=>'Əlaqələndirici şəxsin telefon nömrəsi',            'contact_birthday'=>'Əlaqələndirici şəxsin doğum tarixi',            'company_email'=>'Şirkətin e-poçt ünvanı',        ];    }    public static function getStatus()    {        return [            0 => 'DeAktiv',            1 => 'Aktiv',            2 => 'Gözləmə Rejimi',        ];    }    public function CheckPhoneNumber($attribute)    {        $field = $this->$attribute;        if(!empty($field))        {            $strlen = strlen($field);            if($strlen != 10){                $this->addError($attribute,'Nömrə 10 simvoldan ibarət olmalıdır');            }        }else{            $this->addError($attribute,'Əlaqələndirici şəxsin telefonu xanasını boş buraxmayın');        }    }}