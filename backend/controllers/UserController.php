<?phpnamespace backend\controllers;use Yii;use backend\models\AdminUsers;use backend\models\AdminUsersSearch;use yii\filters\AccessControl;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;use backend\controllers\MainController;exit();/** * UserController implements the CRUD actions for AdminUsers model. */class UserController extends MainController{    const STATUS_ACTIVE = 1;    const STATUS_DEACTIVE = 0;    /**     * @inheritdoc     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'only' => ['*'],                'rules' => [                    [                        'allow' => true,                        'roles' => ['@'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['POST'],                    'deletemore'=>['POST'],                    'status' => ['POST']                ]            ],            [                'class' => 'yii\filters\AjaxFilter',                'only' => ['status']            ]        ];    }    /**     * Lists all AdminUsers models.     * @return mixed     */    public function actionIndex()    {        $searchModel = new AdminUsersSearch();        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);        return $this->render('index', [            'searchModel' => $searchModel,            'dataProvider' => $dataProvider,        ]);    }    public function actionStatus()    {        $id = intval(Yii::$app->request->post('id'));        $model = $this->findModel($id);        $model->status = $model->status == self::STATUS_ACTIVE ? self::STATUS_DEACTIVE : self::STATUS_ACTIVE;        if($model->save(false))        {            Yii::$app->session->setFlash('success','Status dəyişildi');        }else{            Yii::$app->session->setFlash('error','Xəta baş verdi');        }        return $this->redirect(Yii::$app->request->referrer ?: Yii::$app->homeUrl);    }    /**     * Creates a new AdminUsers model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    public function actionCreate()    {        $model = new AdminUsers();        if($model->load(Yii::$app->request->post()))        {            if(Yii::$app->request->post($model->getClassName()))            {                $model->setPassword($model->password);                $model->generateAuthKey();                if($model->save())                {                    Yii::$app->session->setFlash('success','Məlumat əlavə olundu');                }else{                    Yii::$app->session->setFlash('error','Xəta baş verdi');                }                return $this->redirect(['index']);            }        }        return $this->render('create', [            'model' => $model,        ]);    }    /**     * Updates an existing AdminUsers model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionUpdate($id)    {        $model    = $this->findModel($id);        $oldModel = $this->findModel($id);        if($model->load(Yii::$app->request->post()))        {            if(Yii::$app->request->post($model->getClassName()))            {                if(!empty($model->password))                {                    $model->setPassword($model->password);                }else{                    $model->password = $oldModel->password;                }                if($model->save())                {                    Yii::$app->session->setFlash('success','Məlumatlar yeniləndi');                }else{                    Yii::$app->session->setFlash('error','Xəta baş verdi');                }                return $this->redirect(['index']);            }        }        return $this->render('update', [            'model' => $model,        ]);    }    /**     * Deletes an existing AdminUsers model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionDelete($id)    {        if($this->findModel($id)->delete()){            Yii::$app->session->setFlash('success','Məlumat silindi.');        }else{            Yii::$app->session->setFlash('error','Məlumat silinmədi');        }        return $this->redirect(['index']);    }    public function actionDeletemore()    {        $ids = Yii::$app->request->post('del_check');        if(!empty($ids))        {            foreach ($ids as $id)            {                $this->actionDelete($id);            }            Yii::$app->session->setFlash('success','Məlumatlar silindi.');        }else{            Yii::$app->session->setFlash('error','Heç bir seçim edilməyib.');        }        return $this->redirect(Yii::$app->request->referrer ?: Yii::$app->homeUrl);    }    /**     * Finds the AdminUsers model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param integer $id     * @return AdminUsers the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = AdminUsers::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException('The requested page does not exist.');    }}