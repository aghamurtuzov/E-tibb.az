<?phpnamespace backend\controllers;  use Yii;use yii\filters\AccessControl;use backend\models\SiteMenus;use backend\models\SiteMenusSearch;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;use backend\components\Functions;use backend\controllers\MainController;/** * MenuController implements the CRUD actions for SiteMenus model. */class MenuController extends MainController{    public $customPath = 'menu';     /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'only' => ['*'],                'rules' => [                    [                        'allow' => true,                        'roles' => ['@'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['POST'],                ],            ],        ];    }    /**     * Lists all SiteMenus models.     * @return mixed     */    public function actionIndex()    {        $searchModel = new SiteMenusSearch();        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);        return $this->render('index', [            'searchModel' => $searchModel,            'dataProvider' => $dataProvider,            'customPath'    => $this->customPath,        ]);    }    /**     * Displays a single SiteMenus model.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionView($id)    {        return $this->render('view', [            'model' => $this->findModel($id),        ]);    }    /**     * Creates a new SiteMenus model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    public function actionCreate()    {        $model = new SiteMenus();        if ($model->load(Yii::$app->request->post())) {            if(empty($model->link)){                $model->link = Functions::slugify($model->name,['transliterate' => true]);            }            if ($model->save()){                Yii::$app->session->setFlash('success','Məlumat əlavə olundu');                return $this->redirect(['index']);            }        }                return $this->render('create', [            'model' => $model,        ]);    }    /**     * Updates an existing SiteMenus model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionUpdate($id)    {        $model = $this->findModel($id);        $old_link = $model->link;        if ($model->load(Yii::$app->request->post())) {            if(empty($model->link)){                $model->link = Functions::slugify($model->name,['transliterate' => true]);            }            if($old_link == $model->link){                if ($model->save()){                    Yii::$app->session->setFlash('success','Məlumat redaktə olundu');                    return $this->redirect(['index']);                }            }else            {                $model->addError('link', 'Linki Dəyişmək icazəsi yoxdur!');            }        }        return $this->render('update', [            'model' => $model,        ]);    }    /**     * Deletes an existing SiteMenus model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionDelete($id)    {        $this->findModel($id)->delete();        return $this->redirect(['index']);    }    public function actionDeletemore()    {        $ids = Yii::$app->request->post('del_check');        if(!empty($ids))        {            foreach ($ids as $id)            {                $this->actionDelete($id);            }            Yii::$app->session->setFlash('success','Məlumatlar silindi.');        }else{            Yii::$app->session->setFlash('error','Heç bir seçim edilməyib.');        }        return $this->redirect(Yii::$app->request->referrer ?: Yii::$app->homeUrl);    }    /**     * Finds the SiteMenus model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param integer $id     * @return SiteMenus the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = SiteMenus::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException('The requested page does not exist.');    }}