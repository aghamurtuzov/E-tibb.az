<?phpnamespace backend\controllers;use backend\models\Email;use backend\models\Sms;use Yii;use backend\models\SiteUsers;use backend\models\SiteDoctors;use backend\controllers\DoctorsController;use backend\models\SiteUsersSearch;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;use backend\controllers\MainController;/** * SiteUsersController implements the CRUD actions for SiteUsers model. */class SiteUsersController extends MainController{    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['POST'],                ],            ],        ];    }    /**     * Lists all SiteUsers models.     * @return mixed     */    public function actionIndex()    {        $searchModel = new SiteUsersSearch();        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);        $dataProvider->pagination->pageSize=100;        return $this->render('index', [            'searchModel' => $searchModel,            'dataProvider' => $dataProvider,        ]);    }    /**     * Displays a single SiteUsers model.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionView($id)    {        return $this->render('view', [            'model' => $this->findModel($id),            'smsModel' => new Sms(),            'emailModel' => new Email()        ]);    }    /**     * Creates a new SiteUsers model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    public function actionCreate()    {        $model = new SiteUsers();        if ($model->load(Yii::$app->request->post()) && $model->save()) {            return $this->redirect(['view', 'id' => $model->id]);        }        return $this->render('create', [            'model' => $model,        ]);    }    /**     * Updates an existing SiteUsers model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionUpdate($id)    {        $model = $this->findModel($id);        if ($model->load(Yii::$app->request->post()) && $model->save()) {            return $this->redirect(['view', 'id' => $model->id]);        }        return $this->render('update', [            'model' => $model,        ]);    }    /**     * Deletes an existing SiteUsers model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionDelete($id)    {        $model = $this->findModel($id);        if($model->type == 1){            $doctor = SiteDoctors::find()->where(['user_id'=>$id])->one();            if(!empty($doctor)){                if(!empty($doctor['id']))                    Yii::$app->runAction('doctors/delete', ['id' => $doctor['id'],'user_del'=>1]);            }        }        if($model->delete()){            Yii::$app->session->setFlash('success','Məlumat silindi.');        }else{            Yii::$app->session->setFlash('error','Məlumat silinmədi');        }        return $this->redirect(['index']);    }    public function actionDeletemore()    {        $ids = Yii::$app->request->post('del_check');        if(!empty($ids))        {            foreach ($ids as $id)            {                $this->actionDelete($id);            }            Yii::$app->session->setFlash('success','Məlumatlar silindi.');        }else{            Yii::$app->session->setFlash('error','Heç bir seçim edilməyib.');        }        return $this->redirect(Yii::$app->request->referrer ?: Yii::$app->homeUrl);    }    /**     * Finds the SiteUsers model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param integer $id     * @return SiteUsers the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = SiteUsers::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException('The requested page does not exist.');    }}