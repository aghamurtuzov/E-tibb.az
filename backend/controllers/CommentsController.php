<?phpnamespace backend\controllers;use Yii;use yii\filters\AccessControl;use backend\models\SiteComments;use backend\models\SiteCommentsSearch;use backend\models\SiteDoctors;use backend\models\SiteEnterprises;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;use backend\controllers\MainController; /** * CommentsController implements the CRUD actions for SiteComments model. */class CommentsController extends MainController{    public $customPath = 'comments';    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'only' => ['*'],                'rules' => [                    [                        'allow' => true,                        'roles' => ['@'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['POST'],                ],            ],        ];    }    /**     * Lists all SiteComments models.     * @return mixed     */    public function actionIndex()    {        $searchModel = new SiteCommentsSearch();        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);        return $this->render('index', [            'searchModel'   => $searchModel,            'dataProvider'  => $dataProvider,            'customPath'    => $this->customPath,        ]);    }    /**     * Displays a single SiteComments model.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionView($id)    {        return $this->redirect(['index']);    }    /**     * Creates a new SiteComments model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    public function actionCreate()    {        // $model = new SiteComments();        // if ($model->load(Yii::$app->request->post()) && $model->save()) {        //     return $this->redirect(['view', 'id' => $model->id]);        // }        return $this->redirect(['index']);    }    /**     * Updates an existing SiteComments model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionUpdate($id)    {        $model = $this->findModel($id);        $old_positive = $model->positive;        $model->status= 1;        if ($model->load(Yii::$app->request->post()) && $model->save()) {            $connect = false;            if($old_positive!=$model->positive and intval($model->positive)>0){                if($model->type == 1){                    $connect = SiteDoctors::find()->where(['id' => $model->connect_id])->one();                }else if($model->type == 2){                    $connect = SiteEnterprises::find()->where(['id' => $model->connect_id])->one();                }                if($connect){                    $plus_comment = 0;                    $minus_comment = 0;                    $rating_count = $connect->rating_count;                    $explode = explode("-",$rating_count);                    if(count($explode)==2){                        $plus_comment = intval($explode["0"]);                        $minus_comment = intval($explode["1"]);                    }else{                        if(count($explode)==1 and intval($explode)>0){                            $plus_comment = intval($explode);                        }                    }                    if(intval($model->positive)==1){                        $plus_comment = $plus_comment+1;                        if($old_positive>0 and $minus_comment>0){                            $minus_comment = $minus_comment - 1;                        }                    }elseif(intval($model->positive)==2){                        $minus_comment = $minus_comment + 1;                        if($old_positive>0 and $plus_comment>0){                            $plus_comment = $plus_comment-1;                        }                    }                    /*echo $plus_comment."<br />";                    echo $minus_comment."<br />"; exit;*/                    $sum_comment = $plus_comment + $minus_comment;                    if($sum_comment>0){                        $rating = round(($plus_comment*100)/$sum_comment);                        $connect->rating = $rating;                        $connect->rating_count = $plus_comment."-".$minus_comment;                        $connect->save(false);                    }                }            }            Yii::$app->session->setFlash('success','Məlumat redaktə olundu');            return $this->redirect(['index']);        }        return $this->render('update', [            'model' => $model,        ]);    }    /**     * Deletes an existing SiteComments model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionDelete($id)    {        $this->findModel($id)->delete();        Yii::$app->session->setFlash('success','Məlumat silindi.');        return $this->redirect(['index']);    }    public function actionDeletemore()    {        $ids = Yii::$app->request->post('del_check');        if(!empty($ids))        {            foreach ($ids as $id)            {                $this->actionDelete($id);            }            Yii::$app->session->setFlash('success','Məlumatlar silindi.');        }else{            Yii::$app->session->setFlash('error','Heç bir seçim edilməyib.');        }        return $this->redirect(Yii::$app->request->referrer ?: Yii::$app->homeUrl);    }    /**     * Finds the SiteComments model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param integer $id     * @return SiteComments the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = SiteComments::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException('The requested page does not exist.');    }}