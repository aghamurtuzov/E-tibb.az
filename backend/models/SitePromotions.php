<?phpnamespace backend\models;use Yii;use backend\models\SiteDoctors;use backend\models\SiteEnterprises;/** * This is the model class for table "site_promotions". * * @property int $id * @property string $headline * @property int $price * @property int $discount * @property string $date_start * @property string $date_end * @property string $photo * @property string $organizer * @property int $connect_id * @property int $type 1 - Doctor | 2 - Enterprise */class SitePromotions extends \yii\db\ActiveRecord{    /**     * {@inheritdoc}     */    public $files;    public $mainImage;    public $deletedImages;    public static function tableName()    {        return 'site_promotions';    }    public static function change_Promotion($id, $type, $mode,$edited_id=null)    {        switch ($mode) {            case 'add':                if ($type == 1) {                    $model              = SiteDoctors::findOne($id);                    $model->promotion   = $model->promotion+1;                    $model->save(false);                }else{                    $model              = SiteEnterprises::findOne($id);                    $model->promotion   = $model->promotion+1;                    $model->save(false);                }                break;            case 'edit':                if ($type == 1) {                    if(!empty($edited_id)){                        $model              = SiteDoctors::findOne($id);                        $model->promotion   = $model->promotion+1;                        $model->save(false);                        $model2             = SiteDoctors::findOne($edited_id);                        $model2->promotion  = (empty($model2->promotion))? 0: $model2->promotion-1;                        $model2->save(false);                    }                }else{                    if(!empty($edited_id)){                        $model              = SiteEnterprises::findOne($id);                        $model->promotion   = $model->promotion+1;                        $model->save();                        $model2             = SiteEnterprises::findOne($edited_id);                        $model2->promotion  = (empty($model2->promotion))? 0: $model2->promotion-1;                        $model2->save(false);                    }                }                break;            case 'delete':                if ($type == 1) {                    $model              = SiteDoctors::findOne($id);                    $model->promotion  =  (empty($model->promotion))? 0: $model->promotion-1;                    $model->save(false);                }else{                    $model              = SiteEnterprises::findOne($id);                    $model->promotion  = (empty($model->promotion))? 0: $model->promotion-1;                    $model->save(false);                }                break;            default:                break;        }    }    /**     * Get type     */    public static function get_Type()    {        return [            1 => 'Həkim',            2 => 'Korporativ',        ];    }    /**     * {@inheritdoc}     */    public function rules()    {        return [            [['headline','date_start', 'date_end','price'], 'required'],            [['price', 'discount', 'connect_id', 'type', 'notification_status'], 'integer'],            [['content'], 'string'],            [['date_start', 'date_end'], 'safe'],            [['headline', 'organizer'], 'string', 'max' => 250],            [['photo','mainImage','deletedImages'],'string'],        ];    }    /**     * {@inheritdoc}     */    public function attributeLabels()    {        return [            'id' => 'ID',            'headline' => 'Başlıq',            'content' => 'Kontent',            'price' => 'Qiymət',            'discount' => 'Endirim',            'date_start' => 'Başlanğıc Tarix',            'date_end' => 'Bitiş Tarix',            'photo' => 'Şəkil',            'organizer' => 'Oqanizator',            'connect_id' => 'Əlaqədar',            'type' => 'Tip',        ];    }}