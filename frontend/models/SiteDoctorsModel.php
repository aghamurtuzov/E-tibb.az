<?phpnamespace frontend\models;use Yii;use yii\base\Model;class SiteDoctorsModel extends Model{    public $db;    public $datetime;    public static $viewTableName = 'view_clinic_doctors';    public static $viewSpecialistTableName = 'view_doctor_specialist';    public static $tableName = 'site_doctors';    public function __construct(array $config = [])    {        parent::__construct($config);        $this->datetime = Yii::$app->params['current.date'].' '.Yii::$app->params['current.time'];        $this->db       = Yii::$app->db;    }    public static function getHospitalDoctors($hospital_id,$page=0)    {        $db = Yii::$app->db;        $limit = Yii::$app->params["site.hospital_doctor_count"];        $offset = $page*$limit;        $result = $db->createCommand("SELECT * FROM `site_enterprise_employers` WHERE `connect_id`=:hospital_id LIMIT $offset,$limit",[":hospital_id" => $hospital_id])->cache(60)->queryAll();        return $result;    }    public static function getCountHospitalDoctors($hospital_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(connect_id) FROM `site_enterprise_employers` WHERE `connect_id`=:hospital_id",[":hospital_id" => $hospital_id])->cache(60)->queryScalar();        return $result;    }    public static function getSpecialistName($doctor_id)    {        $db = Yii::$app->db;        $specialistName = '';        $result = $db->createCommand("SELECT `name`,`icon`,`slug` FROM `".self::$viewSpecialistTableName."` WHERE `doctor_id`=:doctor_id",[":doctor_id" => $doctor_id])->cache(60)->queryAll();        if($result){            $i=1;            foreach ($result as $row){                if($i>1){                    $specialistName .= ',';                }                $specialistName .= $row["name"];            }        }        return $specialistName;    }    public static function getSpecCountDoctors($specialist_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1",[":specialist_id" => $specialist_id,])->cache(60)->queryScalar();        return $result;    }    public static function getSpecDoctors($specialist_id,$offset,$limit)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1 ORDER BY `id` DESC LIMIT :offset,:limit",[":specialist_id" => $specialist_id,":offset"=>$offset,":limit"=>$limit])->cache(120)->queryAll();        return $result;    }    public static function getAllDoctorsData()    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `site_doctors` WHERE `status`=1 ORDER BY `id` DESC ")->cache(120)->queryAll();        return $result;    }    public static function getSpecialistList($ids)    {        $result = null;        $db     = Yii::$app->db;        $data   = $db->createCommand("SELECT * FROM `view_doctor_specialist` WHERE `doctor_id` IN({$ids}) ORDER BY `name`")->cache(60)->queryAll();        if(!empty($data))        {            foreach($data as $key => $val)            {                $result[$val['doctor_id']][] = $val;            }        }        return $result;    }    public static function getDoctorInfo($id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `site_doctors` WHERE `id`=:id",[":id" => $id])->cache(60)->queryOne();        return $result;    }    public static function getDoctorSpecialist($id)    {        $db     = Yii::$app->db;        $data   = $db->createCommand("SELECT * FROM `view_doctor_specialist` WHERE `doctor_id`=:doctor_id ORDER BY `id`",[":doctor_id"=>$id])->cache(120)->queryAll();        return $data;    }    public static function getWorkplaces($id)    {        $db     = Yii::$app->db;        $data   = $db->createCommand("SELECT * FROM `site_doctor_workplaces_list` WHERE `doctor_id`=:doctor_id ORDER BY `id`",[":doctor_id"=>$id])->cache(120)->queryAll();        return $data;    }    public static function getDoctorWithUser($user_id)    {        $db     = Yii::$app->db;        $data   = $db->createCommand("SELECT * FROM `site_doctors` WHERE `user_id`=:user_id ORDER BY `id`",[":user_id"=>$user_id])->cache(120)->queryOne();        return $data;    }    public function get_next_post($post_id)    {        $data = $this->db->createCommand("SELECT * FROM `site_doctors`                              WHERE `id`>:id  LIMIT 1",[':id'=>$post_id])->queryOne();        if(!empty($data))            return $data;        else            return false;    }    public function get_prev_post($post_id)    {        $data = $this->db->createCommand("SELECT * FROM `site_doctors`                          WHERE `id`<:id LIMIT 1",[':id'=>$post_id])->queryOne();        if(!empty($data))            return $data;        else            return false;    }    public static function getAllDoctors()    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(`id`) as `count` FROM `".self::$tableName."` WHERE  `status`=1")->cache(120)->queryScalar();        return $result;    }    public static function getCountDoctors($keyowrd=null,$category=null)    {        $db = Yii::$app->db;        if($keyowrd!=null && $category!=null)        {            $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `status`=1 and `about` LIKE '%$keyowrd%' and `specialist_id`=:category",[":category"=>$category])->cache(60)->queryAll();        }        elseif($keyowrd!=null)        {            $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `status`=1 and `about` LIKE '%$keyowrd%'")->cache(60)->queryScalar();        }        elseif($category!=null)        {            $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `status`=1 and `specialist_id`=:category",[":category"=>$category])->cache(60)->queryScalar();        }        else        {            $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `status`=1")->cache(60)->queryScalar();        }        return $result;    }    public static function getDoctors($offset,$limit,$keyowrd=null,$category=null)    {        $db = Yii::$app->db;        if($keyowrd!=null && $category!=null)        {            $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `status`=1 and `about` LIKE '%$keyowrd%' and `specialist_id`=:category ORDER BY `id` DESC LIMIT :offset,:limit",[":offset"=>$offset,":limit"=>$limit,":category"=>$category])->cache(60)->queryAll();        }        elseif($keyowrd!=null)        {            $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `status`=1 and `about` LIKE '%$keyowrd%' ORDER BY `id` DESC LIMIT :offset,:limit",[":offset"=>$offset,":limit"=>$limit])->cache(60)->queryAll();        }        elseif($category!=null)        {            $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `status`=1 and `specialist_id`=:category ORDER BY `id` DESC LIMIT :offset,:limit",[":offset"=>$offset,":limit"=>$limit,":category"=>$category])->cache(60)->queryAll();        }        else        {            $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `status`=1 ORDER BY `id` DESC LIMIT :offset,:limit",[":offset"=>$offset,":limit"=>$limit])->cache(60)->queryAll();        }        return $result;    }    public static function getCountDoctorsWithSpec($specialist_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1",[":specialist_id" => $specialist_id,])->cache(120)->queryScalar();        return $result;    }    public static function getDoctorsWithSpec($specialist_id,$offset,$limit)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `specialist_id`=:specialist_id and `status`=1 ORDER BY `id` DESC LIMIT :offset,:limit",[":specialist_id" => $specialist_id,":offset"=>$offset,":limit"=>$limit])->cache(120)->queryAll();        return $result;    }    public static function getCountPremiumDoctors()    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT count(`id`) as `count` FROM `view_doctors_list` WHERE `status`=1 and `is_premium`=1")->cache(60)->queryScalar();        return $result;    }    public static function getPremiumDoctors($offset,$limit)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT * FROM `view_doctors_list` WHERE `status`=1 and `is_premium`=1 ORDER BY `id` DESC LIMIT :offset,:limit",[":offset"=>$offset,":limit"=>$limit])->cache(60)->queryAll();        return $result;    }    public static function getPremiumEnterprises($id,$offset=0,$limit=0)    {        $db = Yii::$app->db;        $limit_query = '';        if($offset>0 and $limit>0){            $limit_query = ' LIMIT '.$offset.",".$limit;        }elseif ($offset==0 and $limit>0){            $limit_query = ' LIMIT '.$limit;        }        $result = $db->createCommand("SELECT id,name,photo,slug,expires,promotion,feature,rating,address FROM `view_enterprise_address`  WHERE `category_id`=:category_id and `status`=1 and expires>=:expires ORDER BY id DESC".$limit_query,[":category_id" => $id,':expires' => date("Y-m-d")])->cache(60)->queryAll();        return $result;    }    public static function getWorkPlace($doctor_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT id,`name` FROM `view_doctor_workplaces` WHERE `doctor_id`=:doctor_id Order by id",[":doctor_id" => $doctor_id])->cache(60)->queryAll();        return $result;    }    public static function getRatingDoctor($doctor_id)    {        $db = Yii::$app->db;        $result = $db->createCommand("SELECT sum(rating) as sum_rating,count(id) as count_rating FROM site_comments where connect_id=:doctor_id and status=1 group by connect_id;",[":doctor_id" => $doctor_id])->cache(60)->queryOne();        return $result;    }}