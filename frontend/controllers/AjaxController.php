<?phpnamespace frontend\controllers;use app\models\SiteContact;use frontend\models\AppointmentWorkdaysSettings;use app\models\SiteComments;use backend\components\Functions;use frontend\models\SiteCommentsModel;use frontend\models\User;use frontend\models\WorkDaysModel;use frontend\models\SiteCalling;use frontend\models\SiteConsultationModel;use Yii;use yii\web\Controller;use yii\web\NotFoundHttpException;use frontend\components\Menu;use yii\helpers\ArrayHelper;use frontend\models\MainModel;use frontend\models\SiteConsultation;use frontend\components\ImageUpload;/** * Ajax controller */class AjaxController extends Controller{    public $menus;    /**     * {@inheritdoc}     */    public function actions()    {        return [            'error' => [                'class' => 'yii\web\ErrorAction',            ],            'captcha' => [                'class' => 'yii\captcha\CaptchaAction',                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,            ],        ];    }    public function beforeAction($action)    {        if (Yii::$app->request->getIsAjax()) {            $menus = ArrayHelper::toArray(new Menu());            $this->menus = $menus['list'];            return $this->menus;        }    }    public function actionHomeEnterprises()    {        if (Yii::$app->request->isAjax) {            $catID = (int)Yii::$app->request->post('id');            if (!empty($catID)) {                $data['category'] = isset($this->menus['id'][$catID]) ? $this->menus['id'][$catID] : [];                if (!empty($data['category'])) {                    $cache = Yii::$app->cache;                    if (!$cache->get('ajaxHomeEnterprises_' . $data['category']['id'])) {                        $mainModel = new MainModel();                        $settings = json_decode($data['category']["settings"], true);                        $data['enterprises'] = $mainModel->getEnterprises($data['category']['id'], $settings['template'] == 0 ? 8 : 4);                        $cache->set('ajaxHomeEnterprises_' . $data['category']['id'], $data['enterprises'], 120);                    } else {                        $data['enterprises'] = $cache->get('ajaxHomeEnterprises_' . $data['category']['id']);                    }                    return $this->renderAjax('/enterprise/list', ['data' => $data]);                }            }        }    }    public function actionGetComments()    {        $request = Yii::$app->request;        $get = $request->get();        if ($request->isAjax) {            if (intval($get['page'])) {                $comments = SiteCommentsModel::getComments($get["row_id"], $_GET["type_id"], $get["page"]);                return $this->renderAjax('/ajax/comments', ['comments' => $comments]);            } else {                throw new \yii\web\BadRequestHttpException;            }        } else {            throw new \yii\web\BadRequestHttpException;        }    }    public function actionThanks()    {        $model = new SiteComments();        if (Yii::$app->request->isAjax) {            Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;            if ($model->load(Yii::$app->request->post())) {                if ($model->validate()) {                    $model->comment = Functions::filterWord($model->comment);                    $model->positive = 0;                    $model->type = 1;                    if ($model->save()) {                        return [                            'data' => [                                'success' => true,                                'model' => $model,                                'message' => 'Rəyiniz göndərildi',                            ],                            'code' => 0,                        ];                    } else {                        return [                            'data' => [                                'success' => false,                                'model' => null,                                'message' => 'An error occured.',                            ],                            'code' => 1, // Some semantic codes that you know them for yourself                        ];                    }                } else {                    return [                        'data' => [                            'success' => false,                            'model' => null,                            'message' => $model->errors                        ],                        'code' => 1, // Some semantic codes that you know them for yourself                    ];                }            } else {                return [                    'data' => [                        'success' => false,                        'model' => null,                        'message' => 'An error occured.',                    ],                    'code' => 1, // Some semantic codes that you know them for yourself                ];            }        }    }    public function actionThanks2()    {        $save = false;        $model = new SiteComments();        if (Yii::$app->request->isAjax) {            if ($model->load(Yii::$app->request->post())) {                $model->comment = Functions::filterWord($model->comment);                $model->datetime = date("Y-m-d H:i:s");                $model->status = 0;                //$model->type = 0;//intval($_POST["type_id"]);                $model->positive = 0;                if ($model->save()) {                    $save = true;                    Yii::$app->session->setFlash("success", "Rəyiniz göndərildi");                }                return $this->renderAjax('/layouts/partials/modals/comment_form', [                    'comment' => $model,                    'save' => $save                ]);            }        }    }    public function actionConsultation()    {        $model = new SiteConsultation();        if (Yii::$app->request->isAjax) {            Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;            if ($model->load(Yii::$app->request->post())) {                if ($model->validate()) {                    if ($model->save()) {                        return [                            'data' => [                                'success' => true,                                'model' => $model,                                'message' => 'Sualınız qeydə alındı.Tezliklə cavablandırılacaqdır.',                            ],                            'code' => 0,                        ];                    } else {                        return [                            'data' => [                                'success' => false,                                'model' => null,                                'message' => 'An error occured.',                            ],                            'code' => 1, // Some semantic codes that you know them for yourself                        ];                    }                } else {                    return [                        'data' => [                            'success' => false,                            'model' => null,                            'message' => $model->errors                        ],                        'code' => 1, // Some semantic codes that you know them for yourself                    ];                }            } else {                return [                    'data' => [                        'success' => false,                        'model' => null,                        'message' => 'An error occured.',                    ],                    'code' => 1, // Some semantic codes that you know them for yourself                ];            }        }    }    public function actionAnswer()    {        if (Yii::$app->request->isAjax) {            Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;            $post = Yii::$app->request->post();            if ((isset($post['answer']) && !empty($post['answer']))) {                $answer = $post['answer'];                $a_datetime = Yii::$app->params['current.date'] . ' ' . Yii::$app->params['current.time'] . ':00';                $q_id = intval($post['q_id']);                if ($q_id > 0) {                    $return = SiteConsultationModel::updateConsultation($q_id, $answer, 0, $a_datetime);                    if ($return) {                        return [                            'data' => [                                'success' => true,                                'model' => null,                                'message' => 'Sual cavablandırıldı.',                            ],                            'code' => 0, // Some semantic codes that you know them for yourself                        ];                    }                } else {                    return [                        'data' => [                            'success' => false,                            'model' => null,                            'message' => 'An error occured.',                        ],                        'code' => 1, // Some semantic codes that you know them for yourself                    ];                }            } else {                return [                    'data' => [                        'success' => false,                        'model' => null,                        'message' => 'An error occured.',                    ],                    'code' => 1, // Some semantic codes that you know them for yourself                ];            }        } else {            return [                'data' => [                    'success' => false,                    'model' => null,                    'message' => 'An error occured.',                ],                'code' => 1, // Some semantic codes that you know them for yourself            ];        }    }    public function actionAnswer2()    {        if (Yii::$app->request->isAjax) {            $post = Yii::$app->request->post();            if ((isset($post['answer']) && !empty($post['answer']))) {                $info = json_decode(base64_decode($post['info']), true);                $status = isset($post['show']) ? 1 : 0;                $info['answer'] = $post['answer'];                $info['a_datetime'] = Yii::$app->params['current.date'] . ' ' . Yii::$app->params['current.time'] . ':00';                if (!empty($info['id'])) {                    $resturn = SiteConsultationModel::updateConsultation($info['id'], $info['answer'], $status, $info['a_datetime']);                    if ($resturn) {                        Yii::$app->session->setFlash("success_answer_{$info['id']}", "Sual cavablandırıldı.");                        return $this->renderAjax('/doctor/_consultation_answer', ['data' => $info]);                    }                }            }        }    }    public function actionTimes2()    {        Yii::$app->response->format = yii\web\Response::FORMAT_JSON;        if (Yii::$app->request->isAjax) {            $post = Yii::$app->request->post();            if (!empty($post['date']) and isset($post['date'])) {//                $reservationDate = str_replace('/', '-', $post['date'] );                $newDate = date("Y-m-d", strtotime($post['date']));                $date = date('Y-m-d', strtotime($newDate));                $model = new WorkDaysModel();                $doctor_id = intval($post['doctor']);                $workdays = $model->getUserWorkday($doctor_id, $date);                if (!empty($workdays))                    $workdays = explode(',', $workdays['workdays']);                else                    $workdays = array();                $closed_times = SiteCalling::getSuitTimes($doctor_id, $date);                $closed_time = array();                if (!empty($closed_times)) {                    foreach ($closed_times as $ct) {                        $closed_time[] = $ct->time;                    }                }                $returned_data = ['work_times' => $workdays, 'used_times' => $closed_time];                return $returned_data;            }        }    }    public function actionTimes()    {        Yii::$app->response->format = yii\web\Response::FORMAT_JSON;        if (Yii::$app->request->isAjax) {            $post = Yii::$app->request->post();            $date = date("Y-m-d", strtotime($post['date']));            $day = date("w", strtotime($post['date']));            $doctor_id = intval($post['doctor']);            if ($day == 0) {                $day = 1;            }            $returned_data = ['day' => $day];            $model = new AppointmentWorkdaysSettings();            $workdays = $model->getUserWorkday($doctor_id, $day);            $siteCalling = new SiteCalling();            $stoppedTime = $siteCalling->getStoppedTime($doctor_id, $date);            if ($workdays != false) {                $workdaysDecode = json_decode($workdays['setting'], true);                $getWorkDay = AppointmentWorkdaysSettings::getWorkTime($workdaysDecode['StartTime'], $workdaysDecode['EndTime'], $workdaysDecode['Interval'], $workdaysDecode['breakTimeStart'], $workdaysDecode['breakTimeEnd']);                $closed_times = SiteCalling::getSuitTimes($doctor_id, $date);                $closed_time = [];                if (!empty($closed_times)) {                    foreach ($closed_times as $ct) {                        $closed_time[] = $ct->time;                    }                }                $stoppedArr = [];                foreach ($stoppedTime as $stopped) {                    $stoppedArr[] = $stopped['time'];                }                $workDayResult = array_diff($getWorkDay['list'], $stoppedArr);                $returned_data = ['workday' => $workDayResult, 'used_times' => $closed_time];            } else {                $returned_data = ['workday' => [], 'used_times' => []];            }            return $returned_data;        }    }    public function actionSaveAppoint()    {        $model = new SiteCalling();        $data = User::getUserData(Yii::$app->user->id);        if (Yii::$app->request->isAjax) {            Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;            $post = Yii::$app->request->post();            if ((isset($post['reservationDate']) && !empty($post['reservationDate'])) && (isset($post['workTime']) && !empty($post['workTime'])) && intval($post['user_id']) > 0) {                $newDate = date("Y-m-d", strtotime($post['reservationDate']));                $day = date("w", strtotime($post['reservationDate']));                $model2 = new AppointmentWorkdaysSettings();                $workdays = $model2->getUserWorkday(intval($post['doctor_id']), $day);                $workdaysDecode = json_decode($workdays['setting'], true);                $getWorkDay = AppointmentWorkdaysSettings::getWorkTime($workdaysDecode['StartTime'], $workdaysDecode['EndTime'], $workdaysDecode['Interval'], $workdaysDecode['breakTimeStart'], $workdaysDecode['breakTimeEnd']);                $model->date = $newDate;                $model->time = Yii::$app->request->post('workTime');                $model->fullname = $data[0]['name'];                $model->email = $data[0]['email'];                $model->telefon = $data[0]['phone_number'];                $model->doctor_id = intval($post['doctor_id']);                $model->user_id = intval($post['user_id']);                if (SiteCalling::hasSuitTimes($model->doctor_id, $newDate, $model->time) && in_array($model->time, $getWorkDay['list'])) {                    if ($model->save() && $model->time != 0) {                        return [                            'data' => [                                'success' => true,                                'model' => null,                                'message' => 'Sorğunuz qəbul edildi! Sorğunuz qəbul olunduqdan sonra sizin mobil nömrənizə sms gələcək.',                            ],                            'code' => 1, // Some semantic codes that you know them for yourself                        ];                    } else {//                        return [                            'data' => [                                'success' => false,                                'model' => null,                                'message' => 'An error occured.',                            ],                            'code' => 1, // Some semantic codes that you know them for yourself                        ];                    }                } else {                    return [                        'data' => [                            'success' => false,                            'model' => null,                            'message' => 'An error occured.',                        ],                        'code' => 1, // Some semantic codes that you know them for yourself                    ];                }            } else {                return [                    'data' => [                        'success' => false,                        'model' => null,                        'message' => 'An error occured.',                    ],                    'code' => 1, // Some semantic codes that you know them for yourself                ];            }        } else {            return [                'data' => [                    'success' => false,                    'model' => null,                    'message' => 'An error occured.',                ],                'code' => 1, // Some semantic codes that you know them for yourself            ];        }    }    public function actionSaveAppoint2()    {        $save = false;        $model = new SiteCalling();        $db = Yii::$app->db;        if (Yii::$app->request->isAjax) {            if ($model->load(Yii::$app->request->post())) {                $model->date = date('Y-m-d', strtotime($model->date));                $model->time = Yii::$app->request->post('work_time');                $numberData = $db->createCommand("SELECT * FROM `site_phone_numbers` where `connect_id`={$model->doctor_id} and `type`=1 and number_type=1")->queryOne();                $number = isset($numberData['number']) ? '+994' . ltrim(trim($numberData['number']), '0') : null;                if (SiteCalling::hasSuitTimes($model->doctor_id, $model->date, $model->time)) {                    if ($model->save() and $model->time != 0) {                        /** Make message */                        $msg = "Sizin " . $model->date . " tarixinde " . $model->time . " radesi ucun randevunuz olacaq tesdiqlemek isteyirsinizmi?";                        //$emailBody = str_replace("\n","<br>",$msg);                        /** Send sms */                        $smsBody = urlencode($msg);                        $sendSms = "gw.maradit.net/api/xml/reply/submit?Credential={Username:appa1,Password:347h3i4}&Header={From:E-tibb.az}&Message={$smsBody}&To=[{$number}]&DataCoding=Default";                        $sendSms = Functions::SendRequestWithCurl($sendSms);                        $save = true;                        Yii::$app->session->setFlash("success", "Sorğunuz qəbul edildi!");                        //return false;                    } else {                        Yii::$app->session->setFlash("error", "Sorğunuz qəbul edilmədi!");                    }                }                return $this->renderAjax('/layouts/partials/modals/appointment', [                    'appointment' => $model,                    'save' => $save                ]);            }        }    }    public function actionContact()    {        $model = new SiteContact();        if (Yii::$app->request->isAjax) {            Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;            if ($model->load(Yii::$app->request->post())) {                if ($model->validate()) {                    $model->datetime = date("Y-m-d H:i:s");                    if ($model->save()) {                        return [                            'data' => [                                'success' => true,                                'model' => $model,                                'message' => 'Təşəkkülər, sorğunuz qəbul edildi. Yaxin zamanda sizinlə əlaqə saxlanılacaq.',                            ],                            'code' => 0,                        ];                    } else {                        return [                            'data' => [                                'success' => false,                                'model' => null,                                'message' => 'An error occured.',                            ],                            'code' => 1, // Some semantic codes that you know them for yourself                        ];                    }                } else {                    return [                        'data' => [                            'success' => false,                            'model' => null,                            'message' => $model->errors                        ],                        'code' => 1, // Some semantic codes that you know them for yourself                    ];                }            } else {                return [                    'data' => [                        'success' => false,                        'model' => null,                        'message' => 'An error occured.',                    ],                    'code' => 1, // Some semantic codes that you know them for yourself                ];            }        }    }    public function actionTinymce()    {        echo "sdaasda";        exit;    }}